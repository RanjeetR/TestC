{"version":3,"sources":["logos/logo.png","components/AppHeader.js","components/AddGuest.js","components/helpers/AjaxHelper.js","components/UserDataForm.js","components/ParcelTokenGeneration.js","components/helpers/SimpleModalComp.js","components/WaitinglistComponent.js","components/RegisteredCustomer.js","components/NonRegisteredCustomer.js","components/helpers/GuestInputForm.js","components/NonRegisterCustomerIdiscont.js","components/helpers/ReusableModals.js","components/RegisterAndNonRegCustomer.js","components/helpers/DiscountCalcUtil.js","components/MenuButtons.js","theme.js","index.js","App.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","header","backgroundImage","DenseAppBar","classes","className","AppBar","position","Toolbar","variant","IconButton","edge","color","aria-label","Typography","React","forwardRef","props","ref","Slide","direction","appBar","title","marginLeft","flex","cancelBtn","width","marginTop","addGuestBtn","savebtn","float","guestWrapper","display","opts","console","log","payload","data","JSON","stringify","axios","method","url","API","then","response","sucessCallback","catch","error","ErrorCallback","btn","margin","fontWeight","lineHeight","backgroundPosition","paper","padding","textAlign","palette","text","secondary","topMargin","rand","Math","round","random","getModalStyle","top","left","transform","backgroundColor","background","border","boxShadow","shadows","SimpleModalComp","useState","modalStyle","openSimpleModal","setSimpleModal","token","custType","setCustType","Modal","aria-labelledby","aria-describedby","open","onClose","closeParentModal","style","id","count","guestCount","Transition","RegisteredCustomer","customerType","useForm","handleSubmit","register","errors","reset","openSimple","setOpenSimple","setOpen","tokenCount","setTokenCount","guestsList","setGuestList","localItemObj","NonRegister","localStorage","getItem","setItem","Date","getHours","hasMainError","inputName","handleClose","Button","onClick","Dialog","fullScreen","TransitionComponent","onSubmit","values","retrievedObject","parse","autoFocus","type","Container","maxWidth","List","ListItem","TextField","fullWidth","name","inputRef","required","helperText","InputProps","startAdornment","InputAdornment","onInput","e","target","value","max","parseInt","toString","slice","flag","height","NonRegisteredCustomer","GuestInputForm","state","setState","useEffect","newObj","tempObj","handleInputChange","index","event","newArr","mobile","dob","doa","married","checked","validateData","a","userObject","length","_checkDuplicateMobile","valid","udpateGList","Promise","resolve","reject","AjaxHelper","res","found","errorCallback","map","person","key","label","onChange","disabled","FormControlLabel","control","GreenCheckbox","topPadding","LabelTopPadding","paddingTop","formContainer","withStyles","green","Checkbox","NonRegisterCustomerIdiscont","errorLabel","setErrorLabel","guestConter","setGuestCOunter","guestList","btnExtraMargin","tempArr","i","push","user","ReusableModals","Alert","elevation","RegisterAndNonRegCustomer","discount","setDiscount","openSnack","setOpenSnack","handleCloseSnack","reason","discountEarned","dobCount","doaCount","dobDiscount","doaDiscount","forEach","guest","DiscountCalcUtil","Snackbar","autoHideDuration","severity","MenuButtons","setToken","showParcelModal","setParcelModal","src","logo","Grid","container","item","xs","tabFirstRow","borderTop","borderBottom","borderRight","createMuiTheme","primary","main","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.3e34d0d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c81d1301.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  header:{\n    backgroundImage:' linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)',\n  }\n}));\n\nexport default function DenseAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\" className={classes.header}>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Shreejee Pure Veg\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport Container from \"@material-ui/core/Container\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport { useForm } from \"react-hook-form\";\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function AddGuestForm({onStarUpdate}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  // const [guestName, guestEmail,guestDate] = React.useState('');\n\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const hasError = inputName => !!(errors && errors[inputName]);\n\n  const guestHandleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const guestHandleClose = () => {\n    setOpen(false);\n  };\n  const guestHandleSave = () => {\n    console.log(\"saving guest\");\n    // GuesthandleSubmit();\n  };\n\n  const [sGuestDate, setSelectedGuestDate] = React.useState(\n    new Date(\"2014-08-18T21:11:54\")\n  );\n  const handleGDateChange = date => {\n    setSelectedGuestDate(date);\n  };\n\n  const onSubmit = values => {\n   // console.log(values);\n    onStarUpdate(values);\n    reset();\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.guestWrapper}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={classes.addGuestBtn}\n        onClick={guestHandleClickOpen}\n      >\n        Add Guest\n      </Button>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={guestHandleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={guestHandleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Back\n            </Typography>\n            <Button\n              type=\"submit\"\n              autoFocus\n              color=\"inherit\"\n              onClick={guestHandleSave}\n            >\n              Save\n            </Button>\n          </Toolbar>\n        </AppBar>\n\n        <Container maxWidth=\"md\" className=\"form-container\">\n          <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\n            <List>\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  name=\"guestName\"\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasError(\"guestName\")}\n                  helperText=\"Guest name is mandatory\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AccountCircleOutlinedIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"EmailAddress\"\n                  name=\"guestEmail\"\n                  inputRef={register({\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                      message: \"invalid email address\"\n                    }\n                  })}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <MailOutlineIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                  error={hasError(\"guestEmail\")}\n                  helperText=\"Email is mandatory\"\n                />\n              </ListItem>\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"ContactNumber\"\n                  name=\"guestContact\"\n                  type='number'\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasError(\"guestContact\")}\n                  helperText=\"Contact number is mandatory\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <CallIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n\n              <ListItem>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    label=\"Birth date or Anniversary\"\n                    format=\"MM/dd/yyyy\"\n                    name=\"guestDate\"\n                     value={sGuestDate}\n                    onChange={handleGDateChange}\n                    error={hasError(\"guestDate\")}\n                    helperText=\"date is mandatory\"\n                    color=\"primary\"\n                    inputRef={register({\n                      required: \"Required\"\n                    })}\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\"\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              </ListItem>\n            </List>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.cancelBtn}\n              onClick={reset}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.savebtn}\n            >\n              Save\n            </Button>\n          </form>\n        </Container>\n      </Dialog>\n    </div>\n  );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n      position: \"relative\",\n      backgroundImage:\n        \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\"\n    },\n  \n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    },\n    cancelBtn: {\n      width: \"20%\",\n      marginTop: \"5%\"\n    },\n    addGuestBtn:{\n        width: \"18%\"\n    },\n    savebtn: {\n      float: \"right\",\n      width: \"20%\",\n      marginTop: \"5%\"\n    },\n    guestWrapper: {\n      display: \"inline\"\n    }\n  }));","import axios from 'axios';\n\nexport default {\n  \n     createPost:function(opts) {\n       let SERVER_URL = 'https://shreeserver.herokuapp.com'\n            console.log('Posting request to Server...', opts);\n        let data = JSON.stringify(opts.data);\n        let  payload = {data}\n           \n            axios({\n                method: 'post',\n                url: SERVER_URL + opts.API,\n                data: payload\n                })\n\n              .then(function (response) {\n               debugger\n               opts.sucessCallback(response)\n              })\n              .catch(function (error) {\n                debugger\n               opts.ErrorCallback(error)\n              });\n      }\n    }","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport Container from \"@material-ui/core/Container\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport AddGuest from \"./AddGuest\";\nimport { useForm } from \"react-hook-form\";\nimport { Rating } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box\";\nimport NotificationBar from './NotificationBar';\nimport AjaxHelper from './helpers/AjaxHelper'\n\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker\n} from \"@material-ui/pickers\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nexport default function UserDataForm() {\n  const { handleSubmit, register, errors, reset } = useForm();\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [guestsList, setGuestList] = React.useState([]);\n\n  const updateGuest = guest => {\n    // This is how we set array in hooks\n    setGuestList([...guestsList, guest]);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const hasMainError = inputName => !!(errors && errors[inputName]);\n  const handleClose = () => {\n    setOpen(false);\n    setGuestList([]);\n  };\n  const [selectedDate, setSelectedDate] = React.useState(\n    new Date(\"2014-08-18T21:11:54\")\n  );\n\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const onSubmit = values => {\n    //   let myRecords = new Array (guestsList);\n    //   myRecords.push(values);\n      \n    console.log(values);\n    console.log('guestlist',guestsList);\n   AjaxHelper.createPost({\n    customerData: values,\n    guestData : guestsList\n\n   })\n    setOpen(false);\n    setGuestList([]);\n   \n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        className={classes.btn}\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Get Discount\n      </Button>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={handleClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Cancel\n              </Typography>\n              <Button autoFocus color=\"inherit\" type=\"submit\">\n                Save\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          <Container maxWidth=\"md\" className=\"form-container\">\n            <List>\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  name=\"custName\"\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasMainError(\"custName\")}\n                  helperText=\"Enter your name\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AccountCircleOutlinedIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"EmailAddress\"\n                  helperText=\"Enter email address\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <MailOutlineIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"ContactNumber\"\n                  name=\"custMobile\"\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasMainError(\"custMobile\")}\n                  helperText=\"Enter your mobiles\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <CallIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n\n              <ListItem>\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                  <KeyboardDatePicker\n                    margin=\"normal\"\n                    id=\"date-picker-dialog\"\n                    format=\"MM/dd/yyyy\"\n                    value={selectedDate}\n                    onChange={handleDateChange}\n                    name=\"custDate\"\n                    inputRef={register({\n                      required: \"Required\"\n                    })}\n                    error={hasMainError(\"custDate\")}\n                    helperText=\"Birth date or Anniversary\"\n                    color=\"primary\"\n                    KeyboardButtonProps={{\n                      \"aria-label\": \"change date\"\n                    }}\n                  />\n                </MuiPickersUtilsProvider>\n              </ListItem>\n            </List>\n\n            <GuestAddedComponent guestListData={guestsList} />\n          </Container>\n        </form>\n        <Container maxWidth=\"md\">\n          <AddGuest onStarUpdate={updateGuest} />\n        </Container>\n      </Dialog>\n    \n    </div>\n  );\n}\n\n  \n\nfunction GuestAddedComponent(guestsList) {\n    let notifiactionArea;\n\n    if (guestsList.guestListData.length) notifiactionArea =   <NotificationBar guestCount = {true} />;\n\n  return (\n    <div>\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <Typography component=\"legend\">Discount earned </Typography>\n        <Rating\n          name=\"read-only\"\n          value={guestsList.guestListData.length}\n          readOnly\n        />\n      </Box>\n      {notifiactionArea}\n    </div>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\"\n  },\n  btn: {\n    margin: \"0 auto\",\n    display: \"block\",\n    width: \"70%\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n    fontWeight: 800,\n    lineHeight: 3.75,\n    color: \"black\",\n    \"&:hover\": {\n      backgroundPosition: \"right center\"\n    }\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  cancelBtn: {\n    width: \"20%\",\n    marginTop: \"5%\"\n  },\n  savebtn: {\n    float: \"right\",\n    width: \"20%\",\n    marginTop: \"5%\"\n  }\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from \"@material-ui/core/Button\";\nimport uniqid from 'uniqid'\n\n\nexport default function ParcelTokenGeneration() {\n  const [open, setOpen] = React.useState(false);\n  const [uniqToken, setUniqToken] = React.useState('');\n  const classes = useStyles();\n\n  const handleClickOpen = () => {\n     setUniqToken(uniqid.time());\n     setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n    \n      <Button variant=\"contained\" className={classes.btn} color=\"primary\"  onClick={handleClickOpen}>\n       Parcel Customers\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\" className=\"title-center\" color={'primary'} >  {uniqToken}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n           Your toke is <strong>  {uniqToken} </strong>\n          Please click on print to get your token printed.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          \n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            Print\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    },\n    topMargin: {\n      marginTop: \"10%\"\n    },\n    btn: {\n      margin: \"0 auto\",\n      display: \"block\",\n      width: \"70%\",\n      backgroundImage:\n        \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n      fontWeight: 800,\n      lineHeight: 3.75,\n      color: \"black\",\n      \"&:hover\": {\n        backgroundPosition: \"right center\"\n      }\n    }\n  }));","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nexport default function SimpleModalComp(props) {\n  const classes = useStyles();\n\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [openSimpleModal, setSimpleModal] = React.useState(true);\n\n  const [custType, setCustType] = React.useState(props.token);\n\n  const handleSMClose = () => {\n    setSimpleModal(false);\n    props.closeParentModal(false);\n    setCustType(\"\");\n  };\n\n\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={openSimpleModal}\n        onClose={handleSMClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <div>\n            <h2 id=\"simple-modal-title\">Token</h2>\n            <div id=\"simple-modal-description\">Customer type <span> <ArrowRightAltIcon color={\"secondary\"}/> </span>  <strong> {custType}</strong> </div>\n          </div>\n          <div>\n            <div id=\"simple-modal-description\">Token No <span> <ArrowRightAltIcon color={\"secondary\"}/> </span>  <strong>{props.count}</strong></div>\n          </div>\n          <div>\n            <div id=\"simple-modal-description\">\n              Guest Count <span> <ArrowRightAltIcon color={\"secondary\"}/> </span> <strong> {props.guestCount.guestCount}</strong> \n            </div>\n          </div>\n        </div>\n     \n\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Container from \"@material-ui/core/Container\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport { useForm } from \"react-hook-form\";\nimport PeopleIcon from '@material-ui/icons/People';\nimport SimpleModalComponent from './helpers/SimpleModalComp';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function WaitingListComponent({onStarUpdate}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  // const [guestName, guestEmail,guestDate] = React.useState('');\n\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const hasError = inputName => !!(errors && errors[inputName]);\n\n  const [openSimple, setOpenSimple] = React.useState(false);\n\n  const guestHandleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const guestHandleClose = () => {\n    setOpen(false);\n  };\n  const onSubmit = values => {\n   console.log(openSimple);\n   // onStarUpdate(values);\n   setOpenSimple(true);\n    reset();\n    // setOpen(false);\n   \n  };\n\n  const closeParentModal = (flag) => {\n    setOpen(flag);\n    setOpenSimple(false);\n  };\n  return (\n    <div className={classes.guestWrapper}>\n     <Button variant=\"contained\" className={classes.btn} color=\"primary\"  onClick={guestHandleClickOpen}>\n       Waiting list\n      </Button>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={guestHandleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              onClick={guestHandleClose}\n              aria-label=\"close\"\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Back\n            </Typography>\n         \n          </Toolbar>\n        </AppBar>\n\n        <Container maxWidth=\"md\" className=\"form-container\">\n          <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\n            <List>\n             \n              \n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"ContactNumber\"\n                  name=\"guestContact\"\n                  type='number'\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasError(\"guestContact\")}\n                  helperText=\"Contact number is mandatory\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <CallIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  name=\"guestCount\"\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasError(\"guestCount\")}\n                  helperText=\"Guest count is mandatory\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <PeopleIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n             \n            </List>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.cancelBtn}\n              onClick={reset}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.savebtn}\n            >\n             Get Token\n            </Button>\n          </form>\n        </Container>\n      </Dialog>\n    {openSimple &&  <SimpleModalComponent  closeParentModal = {closeParentModal }/> }\n    </div>\n  );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n      position: \"relative\",\n      backgroundImage:\n        \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\"\n    },\n  \n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    },\n    cancelBtn: {\n      width: \"20%\",\n      marginTop: \"20%\"\n    },\n    addGuestBtn:{\n        width: \"18%\"\n    },\n    savebtn: {\n      float: \"right\",\n      width: \"20%\",\n      marginTop: \"20%\"\n    },\n    guestWrapper: {\n      display: \"inline\"\n    },\n\n    btn: {\n        margin: \"0 auto\",\n        display: \"block\",\n        width: \"70%\",\n        backgroundImage:\n          \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n        fontWeight: 800,\n        lineHeight: 3.75,\n        color: \"black\",\n        \"&:hover\": {\n          backgroundPosition: \"right center\"\n        }\n    }\n\n  }));","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport Container from \"@material-ui/core/Container\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport { useForm } from \"react-hook-form\";\nimport { Rating } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box\";\nimport NotificationBar from \"./NotificationBar\";\nimport SimpleModalComponent from \"./helpers/SimpleModalComp\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function RegisteredCustomer({ customerType }) {\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const [openSimple, setOpenSimple] = React.useState(false);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [tokenCount, setTokenCount] = React.useState(0);\n\n  const [guestsList, setGuestList] = React.useState([]);\n\n  let localItemObj = { register: 0, NonRegister: 0, token: 0 };\n\n  // Put the object into storage\n  let localStr = localStorage.getItem(\"localItems\");\n  if (!localStr)\n    localStorage.setItem(\"localItems\", JSON.stringify(localItemObj));\n  if (new Date().getHours() == 1)\n    localStorage.setItem(\"localItems\", JSON.stringify(localItemObj));\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const closeParentModal = flag => {\n    setOpen(flag);\n    setOpenSimple(false);\n  };\n  const hasMainError = inputName => !!(errors && errors[inputName]);\n  const handleClose = () => {\n    setOpen(false);\n    setGuestList([]);\n  };\n\n  const onSubmit = values => {\n    //   let myRecords = new Array (guestsList);\n    //   myRecords.push(values);\n\n    console.log(values);\n    console.log(\"guestlist\", guestsList);\n\n    setGuestList(values);\n    let retrievedObject = JSON.parse(localStorage.getItem(\"localItems\") || \"\");\n    retrievedObject.register = retrievedObject.register + 1;\n    setTokenCount(retrievedObject.register);\n    localStorage.setItem(\"localItems\", JSON.stringify(retrievedObject));\n\n    setOpenSimple(true);\n    reset();\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        className={classes.btn}\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Registered Customers\n      </Button>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={handleClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Back\n              </Typography>\n              <Button autoFocus color=\"inherit\" type=\"submit\">\n                Save\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          <Container maxWidth=\"md\" className=\"form-container\">\n            <List>\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"ContactNumber\"\n                  name=\"custMobile\"\n                  type=\"number\"\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasMainError(\"custMobile\")}\n                  helperText=\"Enter your mobiles\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <CallIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                  onInput={e => {\n                    e.target.value = Math.max(0, parseInt(e.target.value))\n                      .toString()\n                      .slice(0, 10);\n                  }}\n                />\n              </ListItem>\n\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  name=\"guestCount\"\n                  type=\"number\"\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasMainError(\"guestCount\")}\n                  helperText=\"Enter guest count\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AccountCircleOutlinedIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n            </List>\n\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.cancelBtn}\n              onClick={handleClose}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.savebtn}\n            >\n              Save\n            </Button>\n          </Container>\n        </form>\n      </Dialog>\n      {openSimple && (\n        <SimpleModalComponent\n          closeParentModal={closeParentModal}\n          token={customerType}\n          guestCount={guestsList}\n          count={tokenCount}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction GuestAddedComponent(guestsList) {\n  let notifiactionArea;\n\n  if (guestsList.guestListData.length)\n    notifiactionArea = <NotificationBar guestCount={true} />;\n\n  return (\n    <div>\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <Typography component=\"legend\">Discount earned </Typography>\n        <Rating\n          name=\"read-only\"\n          value={guestsList.guestListData.length}\n          readOnly\n        />\n      </Box>\n      {notifiactionArea}\n    </div>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\"\n  },\n  btn: {\n    margin: \"0 auto\",\n    display: \"block\",\n    width: \"70%\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n    fontWeight: 500,\n    height: \"100px\",\n    color: \"#151c1d\",\n    marginTop: \"8%\",\n    \"&:hover\": {\n      backgroundPosition: \"right center\"\n    }\n  },\n\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  cancelBtn: {\n    width: \"20%\",\n    marginTop: \"5%\"\n  },\n  savebtn: {\n    float: \"right\",\n    width: \"20%\",\n    marginTop: \"5%\"\n  }\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport Container from \"@material-ui/core/Container\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport { useForm } from \"react-hook-form\";\nimport { Rating } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box\";\nimport NotificationBar from './NotificationBar';\nimport AjaxHelper from './helpers/AjaxHelper';\nimport SimpleModalComponent from './helpers/SimpleModalComp';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function NonRegisteredCustomer({customerType}) {\n    console.log(customerType);\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const [openSimple, setOpenSimple] = React.useState(false);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [tokenCount, setTokenCount] = React.useState(0);\n\n  const [guestsList, setGuestList] = React.useState([]);\n\n  let localItemObj = { 'register': 0, 'NonRegister': 0, 'token': 0 };\n\n// Put the object into storage\nlet localStr = localStorage.getItem('localItems');\nif (!localStr) localStorage.setItem('localItems', JSON.stringify(localItemObj));\nif (new Date().getHours() == 1) localStorage.setItem('localItems', JSON.stringify(localItemObj));\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const closeParentModal = (flag) => {\n    setOpen(flag);\n    setOpenSimple(false);\n  };\n  const hasMainError = inputName => !!(errors && errors[inputName]);\n  const handleClose = () => {\n    setOpen(false);\n    setGuestList([]);\n  };\n  const onSubmit = values => {\n\n    setGuestList(values);\n    let retrievedObject = JSON.parse(localStorage.getItem('localItems') || \"\");\n    retrievedObject.NonRegister = retrievedObject.NonRegister + 1;\n    setTokenCount(retrievedObject.NonRegister);\n    localStorage.setItem('localItems', JSON.stringify(retrievedObject));\n\n\n   setOpenSimple(true);\n   reset();\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        className={classes.btn}\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n       Non-Registered Customers\n      </Button>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={handleClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Cancel\n              </Typography>\n              <Button autoFocus color=\"inherit\" type=\"submit\">\n                Save\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          <Container maxWidth=\"md\" className=\"form-container\">\n            <List>\n              \n            \n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"ContactNumber\"\n                  name=\"NcustMobile\"\n                  type=\"number\"\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasMainError(\"NcustMobile\")}\n                  helperText=\"Enter your mobiles\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <CallIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                  onInput={(e)=>{ \n                    e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,10)\n                 }}\n                />\n              </ListItem>\n\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  name=\"guestCount\"\n                  type=\"number\"\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasMainError(\"guestCount\")}\n                  helperText=\"Enter guest count\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AccountCircleOutlinedIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n            </List>\n\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.cancelBtn}\n              onClick={handleClose}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.savebtn}\n            >\n              Save\n            </Button>\n\n          </Container>\n        </form>\n      </Dialog>\n      {openSimple &&  <SimpleModalComponent  closeParentModal = {closeParentModal }  token={customerType} guestCount={guestsList} count={tokenCount} /> }\n    </div>\n  );\n}\n\n  \n\nfunction GuestAddedComponent(guestsList) {\n    let notifiactionArea;\n\n    if (guestsList.guestListData.length) notifiactionArea =   <NotificationBar guestCount = {true} />;\n\n  return (\n    <div>\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <Typography component=\"legend\">Discount earned </Typography>\n        <Rating\n          name=\"read-only\"\n          value={guestsList.guestListData.length}\n          readOnly\n        />\n      </Box>\n      {notifiactionArea}\n    </div>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\"\n  },\n  btn: {\n    margin: \"0 auto\",\n    display: \"block\",\n    width: \"70%\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n      fontWeight: 500,\n    height: '100px',\n    color: \"#151c1d\",\n    marginTop:'8%',\n    \"&:hover\": {\n      backgroundPosition: \"right center\"\n    },\n \n  },\n\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  cancelBtn: {\n    width: \"20%\",\n    marginTop: \"5%\"\n  },\n  savebtn: {\n    float: \"right\",\n    width: \"20%\",\n    marginTop: \"5%\"\n  }\n}));\n","import React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { green } from \"@material-ui/core/colors\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport AjaxHelper from \"./AjaxHelper\";\nimport CheckCircleOutlineIcon from \"@material-ui/icons/CheckCircleOutline\";\nimport BlockIcon from '@material-ui/icons/Block';\n\nexport default function GuestInputForm(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState(props.count);\n\n  React.useEffect(() => {\n    // way to imporove\n    let newObj = JSON.stringify(props);\n    let tempObj = JSON.parse(newObj);\n    setState(tempObj.count);\n  }, [props.count]);\n\n  const handleInputChange = (index, event) => {\n    let newArr = [...state];\n    if (event.target.name === \"name\") {\n      newArr[index].name = event.target.value;\n    } else if (event.target.name === \"mobile\") {\n\n      newArr[index].mobile = event.target.value;\n    } else if (event.target.name === \"dob\") {\n      newArr[index].dob = event.target.value;\n    }\n    if (event.target.name === \"doa\") {\n      newArr[index].doa = event.target.value;\n    } else if (event.target.name === \"married\") {\n      newArr[index].married = event.target.checked;\n    }\n\n    validateData(index);\n    setState(newArr);\n  };\n\n  const validateData = async (index) => {\n    let newArr = [...state];\n    console.log('validating', index);\n    let userObject = newArr[index];\n    if (userObject.married) {\n      if (\n        userObject.name !== \"\" &&\n        userObject.dob !== \"\" &&\n        userObject.mobile !== \"\" && userObject.mobile.length == \"10\" \n      ) {\n        userObject.valid = await  _checkDuplicateMobile(userObject.mobile);\n      } else {\n        userObject.valid = false;\n      }\n    } else {\n      if (\n        userObject.name !== \"\" &&\n        userObject.dob !== \"\" &&\n        userObject.doa !== \"\" &&\n        userObject.mobile !== \"\" && userObject.mobile.length == \"10\" \n      ) {\n        userObject.valid = await _checkDuplicateMobile(userObject.mobile);\n      } else {\n        userObject.valid = false;\n      }\n    }\n    props.udpateGList(state);\n  };\n\n\n\n\n  const _checkDuplicateMobile = mobile => new Promise((resolve, reject) => {  \n    AjaxHelper.createPost({\n      API: \"/validate\",\n      data: mobile,\n      sucessCallback: function(res) {\n       let flag = false;\n         if (res.data.found == 0) {\n          flag = false;\n         } else {\n            flag = true;\n         }\n  //       return flag;\n         resolve(flag)\n      },\n      errorCallback: function(error) {\n        console.log(\"error\", error);\n        reject(error);\n      }\n    });\n  });\n\n  return (\n    <div className={classes.root}>\n      <div className=\"discount-form\">\n        {state.map((person, index) => (\n          <div key={`${person}~${index}`} className=\"discount-row\">\n            <TextField\n              label=\"Guest Name\"\n              variant=\"outlined\"\n              name=\"name\"\n              value={state.name}\n              onChange={event => handleInputChange(index, event)}\n            />\n            <TextField\n              label=\"mobile number\"\n              variant=\"outlined\"\n              name=\"mobile\"\n              type=\"number\"\n              value={state.mobile}\n              onChange={event => handleInputChange(index, event)}\n               onInput={(e)=>{ \n                   e.target.value = Math.max(0, parseInt(e.target.value) ).toString().slice(0,10)\n                }}\n                error={person.valid}\n            />\n            <TextField\n              type=\"date\"\n              variant=\"outlined\"\n              name=\"dob\"\n              value={state.dob}\n              onChange={event => handleInputChange(index, event)}\n            />\n            <TextField\n              name=\"doa\"\n              value={state.doa}\n              type=\"date\"\n              variant=\"outlined\"\n              onChange={event => handleInputChange(index, event)}\n              disabled={person.married}\n            />\n            <FormControlLabel\n              control={\n                <GreenCheckbox\n                  onChange={event => handleInputChange(index, event)}\n                  value={state.married}\n                  name=\"married\"\n                />\n              }\n              label=\"Unmarried\"\n            />\n            <span className={classes.topPadding}>\n              {person.valid ? (\n                <label>\n                  <BlockIcon color={\"error\"} />\n                </label>\n              ) : (\n               \"\" \n                // <CheckCircleOutlineIcon color={\"primary\"} />\n              )}\n            </span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction SuccessCallBack(res) {\n  console.log(\"Sucess\", res);\n}\nfunction ErrorCallback(error) {\n  console.log(\"error\", error);\n}\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 160\n    }\n  },\n\n  topPadding: {\n    marginTop: \"22px\"\n  },\n  LabelTopPadding: {\n    paddingTop: \"26px\"\n  },\n  formContainer: {\n    display: \"flex\"\n  }\n}));\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    \"&$checked\": {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport Container from \"@material-ui/core/Container\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport { useForm } from \"react-hook-form\";\nimport { Rating } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box\";\nimport NotificationBar from './NotificationBar';\nimport AjaxHelper from './helpers/AjaxHelper';\nimport GuestInputForm from './helpers/GuestInputForm'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function NonRegisterCustomerIdiscont() {\n\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const [openSimple, setOpenSimple] = React.useState(false);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [errorLabel, setErrorLabel] = React.useState(false);\n\n  const [guestsList, setGuestList] = React.useState([]);\n\n  const [guestConter, setGuestCOunter] = React.useState([]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const closeParentModal = (flag) => {\n    setOpen(flag);\n    setOpenSimple(false);\n  };\n  const guestList = {\n    name:'',\n    mobile:'',\n    dob:'',\n    doa:'',\n    married:false,\n    valid: false\n  }\n  const hasMainError = inputName => !!(errors && errors[inputName]);\n  const handleClose = () => {\n    setOpen(false);\n    setGuestList([]);\n    setGuestCOunter([]);\n  };\n  const updateGuList = (user) => {\n    setGuestList(user);\n  }\n  const onSubmit = values => {\n    // Calculate discount here\n    \n   AjaxHelper.createPost({\n     API:'/save',\n    data: guestsList,\n    sucessCallback: function(res) {\n      console.log('Saved successfully...');\n      handleClose();\n    },\n    errorCallback: function(error) {\n      console.log('error', error);\n      handleClose();\n    }\n\n   })\n   setOpenSimple(true);\n   reset();   \n  };\n  const guestCountChange = (e)=> {\n  \n    if ( e.target.value > 10) {\n          setErrorLabel(true);\n          setGuestCOunter([]);\n          return;   \n    } else {\n      setErrorLabel(false);\n    }\n   \n    let tempArr = [];\n    for (var i =0 ; i < e.target.value; i++ ) {\n      tempArr.push(guestList)\n    }\n    setGuestCOunter(tempArr);\n  }\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        className={classes.btnExtraMargin}\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Non Register customers interested for discount\n      </Button>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={handleClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Cancel\n              </Typography>\n              <Button autoFocus color=\"inherit\" type=\"submit\">\n                Save\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          <Container maxWidth=\"lg\" className=\"form-container\">\n            <List>\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"ContactNumber\"\n                  name=\"customerNumber\"\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasMainError(\"customerNumber\")}\n                  helperText=\"Enter your mobiles\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <CallIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  name=\"guestCount\"\n                  onChange={guestCountChange}\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasMainError(\"guestCount\")}\n                  helperText=\"Enter guest count\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AccountCircleOutlinedIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n              <ListItem> \n                { errorLabel ?  <label className=\"error-label\"> For more than 10 guests, please collect form from reception.</label>\n          :'\u001c' }\n                    </ListItem>\n            </List>\n\n    <GuestInputForm count = {guestConter}  udpateGList={updateGuList}/>\n\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.cancelBtn}\n              onClick={handleClose}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.savebtn}\n            >\n              Save\n            </Button>\n\n          </Container>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n\n  \n\nfunction GuestAddedComponent(guestsList) {\n    let notifiactionArea;\n\n    if (guestsList.guestListData.length) notifiactionArea =   <NotificationBar guestCount = {true} />;\n\n  return (\n    <div>\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <Typography component=\"legend\">Discount earned </Typography>\n        <Rating\n          name=\"read-only\"\n          value={guestsList.guestListData.length}\n          readOnly\n        />\n      </Box>\n      {notifiactionArea}\n    </div>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\"\n  },\n  btn: {\n    margin: \"0 auto\",\n    display: \"block\",\n    width: \"70%\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n      fontWeight: 500,\n    height: '100px',\n    color: \"#151c1d\",\n    marginTop:'8%',\n    \"&:hover\": {\n      backgroundPosition: \"right center\"\n    },\n \n  },\n\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  cancelBtn: {\n    width: \"20%\",\n    marginTop: \"5%\"\n  },\n  savebtn: {\n    float: \"right\",\n    width: \"20%\",\n    marginTop: \"5%\"\n  },\n  btnExtraMargin: {\n    marginTop:'47%',\n    margin: \"0 auto\",\n    display: \"block\",\n    width: \"70%\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n    fontWeight: 500,\n    height:'100px',\n    color: \"#151c1d\",\n  \n    \"&:hover\": {\n      backgroundPosition: \"right center\"\n    },\n}\n}));\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nexport default function ReusableModals(props) {\n  const classes = useStyles();\n\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = React.useState(getModalStyle);\n  const [openSimpleModal, setSimpleModal] = React.useState(true);\n\n  const [custType, setCustType] = React.useState(props.token);\n\n  const handleSMClose = () => {\n    setSimpleModal(false);\n    props.closeParentModal(false);\n    setCustType(\"\");\n  };\n\n\n\n  return (\n    <div>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={openSimpleModal}\n        onClose={handleSMClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <div>\n            <h2 id=\"simple-modal-title\">Token</h2>\n            <div id=\"simple-modal-description\">Customer <span> <ArrowRightAltIcon color={\"secondary\"}/> </span>  <strong> Parcel</strong> </div>\n    \n            <div id=\"simple-modal-description\">Token No <span> <ArrowRightAltIcon color={\"secondary\"}/> </span>  <strong> {props.tokenCount}</strong> </div>\n          </div>\n         \n        </div>\n     \n\n      </Modal>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AccountCircleOutlinedIcon from \"@material-ui/icons/AccountCircleOutlined\";\nimport Container from \"@material-ui/core/Container\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport { useForm } from \"react-hook-form\";\nimport { Rating } from \"@material-ui/lab\";\nimport Box from \"@material-ui/core/Box\";\nimport NotificationBar from \"./NotificationBar\";\nimport AjaxHelper from \"./helpers/AjaxHelper\";\nimport GuestInputForm from \"./helpers/GuestInputForm\";\nimport DiscountCalcUtil from \"./helpers/DiscountCalcUtil\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function RegisterAndNonRegCustomer() {\n  const { handleSubmit, register, errors, reset } = useForm();\n\n  const [openSimple, setOpenSimple] = React.useState(false);\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [errorLabel, setErrorLabel] = React.useState(false);\n  const [guestsList, setGuestList] = React.useState([]);\n  const [discount, setDiscount] = React.useState([]);\n  const [openSnack, setOpenSnack] = React.useState(false);\n\n  const [guestConter, setGuestCOunter] = React.useState([]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const closeParentModal = flag => {\n    setOpen(flag);\n    setOpenSimple(false);\n  };\n  const guestList = {\n    name: \"\",\n    mobile: \"\",\n    dob: \"\",\n    doa: \"\",\n    married: false,\n    valid: false\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setErrorLabel(false);\n    setGuestCOunter([]);\n    reset();\n    setGuestList([]);\n  };\n  const updateGuList = user => {\n    setGuestList(user);\n  };\n  const hasMainError = inputName => !!(errors && errors[inputName]);\n  const handleCloseSnack = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenSnack(false);\n  };\n  const onSubmit = values => {\n    // Calculate discount here\n    let discountEarned = DiscountCalcUtil(guestsList);\n    setDiscount(discountEarned);\n\n    setOpenSnack(true);\n\n    AjaxHelper.createPost({\n      API: \"/save\",\n      data: guestsList,\n      sucessCallback: function(res) {\n        console.log(\"\u001csuceesfully saved\");\n        handleClose();\n      },\n      errorCallback: function(error) {\n        console.log(\"error\", error);\n        handleClose();\n      }\n    });\n    setOpenSimple(true);\n    reset();\n  };\n  const guestCountChange = e => {\n    if (e.target.value > 10) {\n      setErrorLabel(true);\n      setGuestCOunter([]);\n      return;\n    } else {\n      setErrorLabel(false);\n    }\n\n    let tempArr = [];\n    for (var i = 0; i < e.target.value; i++) {\n      tempArr.push(guestList);\n    }\n    setGuestCOunter(tempArr);\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"contained\"\n        className={classes.btnExtraMargin}\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Register + Non Register customers interested for discount\n      </Button>\n\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form className={classes.root} onSubmit={handleSubmit(onSubmit)}>\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={handleClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                Cancel\n              </Typography>\n              <Button autoFocus color=\"inherit\" type=\"submit\">\n                Save\n              </Button>\n            </Toolbar>\n          </AppBar>\n\n          <Container maxWidth=\"lg\" className=\"form-container\">\n            <List>\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"ContactNumber\"\n                  name=\"customerNumber\"\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasMainError(\"customerNumber\")}\n                  helperText=\"Enter your mobiles\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <CallIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n\n              <ListItem>\n                <TextField\n                  fullWidth\n                  id=\"standard-basic\"\n                  name=\"guestCount\"\n                  onChange={guestCountChange}\n                  inputRef={register({\n                    required: \"Required\"\n                  })}\n                  error={hasMainError(\"guestCount\")}\n                  helperText=\"Enter guest count\"\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AccountCircleOutlinedIcon color=\"primary\" />\n                      </InputAdornment>\n                    )\n                  }}\n                />\n              </ListItem>\n              <ListItem>\n                {errorLabel ? (\n                  <label className=\"error-label\">\n                    {\" \"}\n                    For more than 10 guests, please collect form from reception.\n                  </label>\n                ) : (\n                  \"\u001c\"\n                )}\n              </ListItem>\n            </List>\n\n            <GuestInputForm count={guestConter} udpateGList={updateGuList} />\n\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.cancelBtn}\n              onClick={handleClose}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              className={classes.savebtn}\n            >\n              Save\n            </Button>\n          </Container>\n        </form>\n      </Dialog>\n      <Snackbar\n        open={openSnack}\n        autoHideDuration={6000}\n        onClose={handleCloseSnack}\n      >\n        <Alert onClose={handleCloseSnack} severity=\"success\">\n          Congratulations!! You have earned {discount} discount.\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n}\n\nfunction GuestAddedComponent(guestsList) {\n  let notifiactionArea;\n\n  if (guestsList.guestListData.length)\n    notifiactionArea = <NotificationBar guestCount={true} />;\n\n  return (\n    <div>\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <Typography component=\"legend\">Discount earned </Typography>\n        <Rating\n          name=\"read-only\"\n          value={guestsList.guestListData.length}\n          readOnly\n        />\n      </Box>\n      {notifiactionArea}\n    </div>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: \"relative\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\"\n  },\n  btn: {\n    margin: \"0 auto\",\n    display: \"block\",\n    width: \"70%\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n    fontWeight: 500,\n    height: \"100px\",\n    color: \"#151c1d\",\n    marginTop: \"8%\",\n    \"&:hover\": {\n      backgroundPosition: \"right center\"\n    }\n  },\n\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  },\n  cancelBtn: {\n    width: \"20%\",\n    marginTop: \"5%\"\n  },\n  savebtn: {\n    float: \"right\",\n    width: \"20%\",\n    marginTop: \"5%\"\n  },\n  btnExtraMargin: {\n    marginTop: \"47%\",\n    margin: \"0 auto\",\n    display: \"block\",\n    width: \"70%\",\n    backgroundImage:\n      \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n    fontWeight: 500,\n    height: \"100px\",\n    color: \"#151c1d\",\n\n    \"&:hover\": {\n      backgroundPosition: \"right center\"\n    }\n  }\n}));\n","\n\nexport default function DiscountCalcUtil(values) {\ndebugger\n\n    console.log('\u001cDiscount calc', values);\ndebugger\n    let guestCount = values.length;  //2\n    let dobCount = 0; // 20 \n    let doaCount = 0; // 20\n    let dobDiscount = 0;\n    let doaDiscount = 0;\n\n    if (guestCount) {\n        values.forEach(guest => {\n\n            if (guest.dob) dobCount++\n            if (guest.doa) doaCount++\n            \n        });\n\n        dobDiscount = ((dobCount * 10) / (guestCount * 10)) * 10;\n        doaDiscount = (doaCount * 5) / (guestCount * 5 ) * 5;\n        console.log(dobDiscount + doaDiscount + \"%\");\n        return (dobDiscount + doaDiscount);\n\n    }\n\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport UserDataForm from \"./UserDataForm\";\nimport ParcelTokenGeneration from './ParcelTokenGeneration'\nimport WaitlingListComponent from './WaitinglistComponent';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport RegisteredCustomer from './RegisteredCustomer';\nimport NonRegisteredCustomer from './NonRegisteredCustomer';\nimport NonRegisterCustomerIdiscont from './NonRegisterCustomerIdiscont'\nimport ReusableModals from './helpers/ReusableModals';\nimport logo from '../logos/logo.png';\nimport RegisterAndNonRegCustomer from './RegisterAndNonRegCustomer';\nconst borderColor = '#00000024';\n\n\nexport default function MenuButtons() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [tokenCount, setToken] = React.useState();\n  const [showParcelModal, setParcelModal] = React.useState(false);\n\n\n  const parcelCustomer = () => {\n\n    let retrievedObject = JSON.parse(localStorage.getItem('localItems') || \"\");\n    retrievedObject.token = retrievedObject.token + 1;\n    setToken(retrievedObject.token);\n    localStorage.setItem('localItems', JSON.stringify(retrievedObject));\n\n    setParcelModal(true);\n}\nconst closeParentModal = flag => {\n  setOpen(flag);\n  setToken(false);\n  setParcelModal(false);\n\n};\n  return (\n    <div className={classes.root}>\n    <Container maxWidth=\"sm\">\n       <img src ={logo} />  \n      </Container>\n      <Grid container spacing={3} className={classes.topMargin}>\n\n   \n       \n           <Grid item xs={4} className={classes.tabFirstRow} >\n                <Grid item xs={12}>  \n                  <RegisteredCustomer customerType = {'RC'} />\n          </Grid>\n                <Grid item xs={12}>\n                \n                <NonRegisteredCustomer customerType = {'NRCND'} />\n                 </Grid>\n                <Grid item xs={12}> \n                <Button variant=\"contained\" className={classes.btn} color=\"primary\" onClick={parcelCustomer}>\n                       Parcel customers\n                    </Button> \n                \n                 </Grid>\n           </Grid>\n           <Grid item xs={4} className={classes.tabFirstRow} >\n          <NonRegisterCustomerIdiscont />\n           </Grid>\n           <Grid item xs={4} >\n              <RegisterAndNonRegCustomer />\n           </Grid>\n      </Grid>\n    \n      {showParcelModal && (\n        <ReusableModals\n          closeParentModal={closeParentModal}\n          tokenCount ={tokenCount}\n        />\n      )}\n    </div>\n  );\n}\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary\n    },\n    topMargin: {\n      marginTop: \"4%\",\n      borderTop: '1px solid '+ borderColor,\n      borderBottom: '1px solid '+borderColor\n    },\n    btn: {\n      margin: \"0 auto\",\n      display: \"block\",\n      width: \"70%\",\n      backgroundImage:\n        \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n        fontWeight: 500,\n      height: '100px',\n      color: \"#151c1d\",\n      marginTop:'8%',\n      \"&:hover\": {\n        backgroundPosition: \"right center\"\n      },\n   \n    },\n  \n  tabFirstRow: {\n      // width: 'calc(100vw - 350px)',\n      // height: 'calc((100vw - 350px) * 0.468795)',\n      borderRight: '1px solid '+borderColor\n  },\n  btnExtraMargin: {\n      marginTop:'47%',\n      margin: \"0 auto\",\n      display: \"block\",\n      width: \"70%\",\n      backgroundImage:\n        \" linear-gradient(to right, #4CB8C4 0%, #3CD3AD 51%, #4CB8C4 100%)\",\n      fontWeight: 500,\n      height:'100px',\n      color: \"#151c1d\",\n    \n      \"&:hover\": {\n        backgroundPosition: \"right center\"\n      },\n  }\n  }));","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n","import React from 'react';\nimport AppHeader from './components/AppHeader';\nimport MenuButtons from './components/MenuButtons';\nimport './index.css';\n\n\nexport default function App() {\n  return (\n    <div>\n    \n      <AppHeader />\n      <MenuButtons />\n  \n    </div>\n  \n  );\n}\n"],"sourceRoot":""}